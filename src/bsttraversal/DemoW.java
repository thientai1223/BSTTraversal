package bsttraversal;

import java.awt.BorderLayout;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class DemoW extends javax.swing.JFrame {

    BSTree tree;
    BSTPaper p;

    /**
     * Creates new form DemoW
     */
    public DemoW() {
        initComponents();
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        tree = new BSTree(1366, 100);
        p = new BSTPaper(tree, 1366, 100);
        pnName.setLayout(new BorderLayout());
        pnName.add(p, BorderLayout.CENTER);
        txtResult.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtValue = new javax.swing.JTextField();
        AddValue = new javax.swing.JButton();
        RandomValue = new javax.swing.JButton();
        FindValue = new javax.swing.JButton();
        RemoveValue = new javax.swing.JButton();
        txtResult = new javax.swing.JTextField();
        pnName = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        myOpen = new javax.swing.JMenuItem();
        mySave = new javax.swing.JMenuItem();
        nyClear = new javax.swing.JMenuItem();
        myExit = new javax.swing.JMenuItem();
        myPre = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        myIn = new javax.swing.JMenuItem();
        myPost = new javax.swing.JMenuItem();
        myDFS = new javax.swing.JMenuItem();
        myBFS = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        myMax = new javax.swing.JMenuItem();
        myMin = new javax.swing.JMenuItem();
        myBalance = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuration"));

        txtValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValueActionPerformed(evt);
            }
        });

        AddValue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/add.png"))); // NOI18N
        AddValue.setText("Add");
        AddValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddValueActionPerformed(evt);
            }
        });

        RandomValue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/random.png"))); // NOI18N
        RandomValue.setText("Random");
        RandomValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RandomValueActionPerformed(evt);
            }
        });

        FindValue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/find.png"))); // NOI18N
        FindValue.setText("Find");
        FindValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindValueActionPerformed(evt);
            }
        });

        RemoveValue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/remove.png"))); // NOI18N
        RemoveValue.setText("Remove");
        RemoveValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveValueActionPerformed(evt);
            }
        });

        txtResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtResult, javax.swing.GroupLayout.PREFERRED_SIZE, 1382, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(AddValue)
                        .addGap(40, 40, 40)
                        .addComponent(RandomValue)
                        .addGap(41, 41, 41)
                        .addComponent(FindValue)
                        .addGap(42, 42, 42)
                        .addComponent(RemoveValue)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddValue)
                    .addComponent(RandomValue)
                    .addComponent(FindValue)
                    .addComponent(RemoveValue))
                .addGap(18, 18, 18)
                .addComponent(txtResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pnName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnNameLayout = new javax.swing.GroupLayout(pnName);
        pnName.setLayout(pnNameLayout);
        pnNameLayout.setHorizontalGroup(
            pnNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnNameLayout.setVerticalGroup(
            pnNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 637, Short.MAX_VALUE)
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/add.png"))); // NOI18N
        jMenu1.setText("File");

        myOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/open.png"))); // NOI18N
        myOpen.setText("Open");
        myOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myOpenActionPerformed(evt);
            }
        });
        jMenu1.add(myOpen);

        mySave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/save.png"))); // NOI18N
        mySave.setText("Save");
        mySave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mySaveActionPerformed(evt);
            }
        });
        jMenu1.add(mySave);

        nyClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/clear.png"))); // NOI18N
        nyClear.setText("Clear");
        nyClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nyClearActionPerformed(evt);
            }
        });
        jMenu1.add(nyClear);

        myExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/exit.png"))); // NOI18N
        myExit.setText("Exit");
        myExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myExitActionPerformed(evt);
            }
        });
        jMenu1.add(myExit);

        jMenuBar1.add(jMenu1);

        myPre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/tree.png"))); // NOI18N
        myPre.setText("Traversal");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/tree.png"))); // NOI18N
        jMenuItem1.setText("Pre-Order");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        myPre.add(jMenuItem1);

        myIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/tree.png"))); // NOI18N
        myIn.setText("In-Order");
        myIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myInActionPerformed(evt);
            }
        });
        myPre.add(myIn);

        myPost.setText("Post-Order");
        myPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myPostActionPerformed(evt);
            }
        });
        myPre.add(myPost);

        myDFS.setText("DFS");
        myDFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myDFSActionPerformed(evt);
            }
        });
        myPre.add(myDFS);

        myBFS.setText("BFS");
        myBFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myBFSActionPerformed(evt);
            }
        });
        myPre.add(myBFS);

        jMenuBar1.add(myPre);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/tree_algorithm.png"))); // NOI18N
        jMenu3.setText("Algorithms");

        myMax.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/tree_algorithm.png"))); // NOI18N
        myMax.setText("Max");
        myMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myMaxActionPerformed(evt);
            }
        });
        jMenu3.add(myMax);

        myMin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/tree_algorithm.png"))); // NOI18N
        myMin.setText("Min");
        myMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myMinActionPerformed(evt);
            }
        });
        jMenu3.add(myMin);

        myBalance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/tree_algorithm.png"))); // NOI18N
        myBalance.setText("Balance");
        myBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myBalanceActionPerformed(evt);
            }
        });
        jMenu3.add(myBalance);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myOpenActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            if (file.exists()) {
                try {
                    this.tree.clear();
                    Scanner sc = new Scanner(file);
                    int numberOfNodeData = sc.nextInt();
                    int nodeData;
                    for (int i = 0; i < numberOfNodeData; i++) {
                        nodeData = sc.nextInt();
                        this.tree.addNode(nodeData);
                    }
                    sc.close();
                    p.refesh();
                } catch (FileNotFoundException ex) {
                    System.out.println(ex);
                }
            }
        }
    }//GEN-LAST:event_myOpenActionPerformed

    private void myExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);

    }//GEN-LAST:event_myExitActionPerformed

    private void nyClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nyClearActionPerformed
        // TODO add your handling code here:
        p.clear1();
        //p.refesh();
    }//GEN-LAST:event_nyClearActionPerformed

    private void mySaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mySaveActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            FileWriter fw = null;
            try {
                File file = jfc.getSelectedFile();
                fw = new FileWriter(file);
                this.tree.preOrder();//dùng để lấy được chuỗi duyệt tiền tự
                fw.write(this.tree.getCountData() + "\n");
                fw.write(this.tree.getFileData());
                fw.flush();//ghi dữ liệu từ RAM xuống HDD
            } catch (IOException ex) {
                System.out.println(ex);
            } finally {
                try {
                    fw.close();
                } catch (IOException ex) {
                    System.out.println(ex);
                }
            }
        }
    }//GEN-LAST:event_mySaveActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        tree.preOrder();
        String result = tree.getTraversalResult();
        txtResult.setText("Pre-Order Traversal Result: " + result);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void myInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myInActionPerformed
        // TODO add your handling code here:
        tree.inOrder();
        String result = tree.getTraversalResult();
        txtResult.setText("In-Order Traversal Result: " + result);
    }//GEN-LAST:event_myInActionPerformed

    private void myDFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myDFSActionPerformed
        // TODO add your handling code here:
        this.tree.DFS();
        txtResult.setText("DFS Traversal Result: " + this.tree.result);
    }//GEN-LAST:event_myDFSActionPerformed

    private void myMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myMinActionPerformed
        // TODO add your handling code here:
        p.findMin();
    }//GEN-LAST:event_myMinActionPerformed

    private void myPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myPostActionPerformed
        // TODO add your handling code here:
        tree.postOrder();
        String result = tree.getTraversalResult();
        txtResult.setText("Post-Order Traversal Result: " + result);
    }//GEN-LAST:event_myPostActionPerformed

    private void myBFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myBFSActionPerformed
        // TODO add your handling code here:
        this.tree.BFS();
        txtResult.setText("BFS Traversal Result: " + this.tree.result);
    }//GEN-LAST:event_myBFSActionPerformed

    private void myBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myBalanceActionPerformed
        // TODO add your handling code here:
        tree.balancing();
        p.refesh();
    }//GEN-LAST:event_myBalanceActionPerformed

    private void myMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myMaxActionPerformed
        // TODO add your handling code here:
        p.findMax();
    }//GEN-LAST:event_myMaxActionPerformed

    private void AddValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddValueActionPerformed
        // TODO add your handling code here:
        int data = Integer.parseInt(txtValue.getText());
        p.addNode(data);
    }//GEN-LAST:event_AddValueActionPerformed

    private void txtValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValueActionPerformed

    private void FindValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindValueActionPerformed
        // TODO add your handling code here:
        BSTNode node = this.tree.findNode(Integer.parseInt(txtValue.getText()));
        if (node == null) {
            JOptionPane.showMessageDialog(this, "The node '" + txtValue.getText() + "' is not found!");
        } else {
            txtResult.setText("The node '" + txtValue.getText() + "' is found in the tree!");
            p.drawPath();
        }
    }//GEN-LAST:event_FindValueActionPerformed

    private void RemoveValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveValueActionPerformed
        // TODO add your handling code here:
        BSTNode node = this.tree.findNode(Integer.parseInt(txtValue.getText()));
        if (node == null) {
            JOptionPane.showMessageDialog(this, "The node '" + txtValue.getText() + "' is not found!");
        } else {
            txtResult.setText("The node '" + txtValue.getText() + "' is found in the tree!");
            p.drawPath();

            if (JOptionPane.showConfirmDialog(this, "Do you really want to delete the node '"
                    + txtValue.getText() + "'?", "warning",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                p.deleteNode(Integer.parseInt(txtValue.getText()));
            }
        }

    }//GEN-LAST:event_RemoveValueActionPerformed

    private void txtResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtResultActionPerformed
    public static int randomNumber(int min, int max) {
        return min + (int) (Math.random() * ((max - min) + 1));
    }
    private void RandomValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RandomValueActionPerformed
        // TODO add your handling code here:
        int data = randomNumber(0, 99);
        p.addNode(data);
    }//GEN-LAST:event_RandomValueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DemoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DemoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DemoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DemoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DemoW().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddValue;
    private javax.swing.JButton FindValue;
    private javax.swing.JButton RandomValue;
    private javax.swing.JButton RemoveValue;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuItem myBFS;
    private javax.swing.JMenuItem myBalance;
    private javax.swing.JMenuItem myDFS;
    private javax.swing.JMenuItem myExit;
    private javax.swing.JMenuItem myIn;
    private javax.swing.JMenuItem myMax;
    private javax.swing.JMenuItem myMin;
    private javax.swing.JMenuItem myOpen;
    private javax.swing.JMenuItem myPost;
    private javax.swing.JMenu myPre;
    private javax.swing.JMenuItem mySave;
    private javax.swing.JMenuItem nyClear;
    private javax.swing.JPanel pnName;
    private javax.swing.JTextField txtResult;
    private javax.swing.JTextField txtValue;
    // End of variables declaration//GEN-END:variables
}
